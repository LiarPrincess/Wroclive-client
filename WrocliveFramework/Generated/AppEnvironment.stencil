// sourcery:file:AppEnvironment.swift
// This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
// If a copy of the MPL was not distributed with this file,
// You can obtain one at http://mozilla.org/MPL/2.0/.

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length
// swiftlint:disable vertical_whitespace

import Foundation

{% macro getName type %}{{ type.name|replace:"Manager",""|lowerFirstLetter }}{% endmacro %}
{% macro getProtocol type %}{{ type.name }}Type{% endmacro %}

public enum AppEnvironment {
  {% for manager in types.all|annotated:"manager" %}
  public static var {% call getName manager %}: {% call getProtocol manager %} { return current.{% call getName manager %} }
  {% endfor %}
  public static var configuration: Configuration { return current.configuration }

  private static var stack: [Environment] = []

  public static var current: Environment {
    precondition(stack.any, "Attempting to use empty environment stack.")
    return stack.last!
  }

  public static func push(
  {% for manager in types.all|annotated:"manager" %}
    {% call getName manager %}: {% call getProtocol manager %} = current.{% call getName manager %},
  {% endfor %}
    configuration: Configuration = current.configuration) {

    push(
      Environment(
      {% for manager in types.all|annotated:"manager" %}
        {% call getName manager %}: {% call getName manager %},
      {% endfor %}
        configuration: configuration
    ))
  }

  public static func push(_ environment: Environment) {
    stack.append(environment)
  }

  public static func pop() {
    _ = stack.popLast()
  }
}

// sourcery:end
